{"ast":null,"code":"var _jsxFileName = \"/Users/allan/Desktop/Development/DApp v2/Game_dApp/src/Pages/ChkBalance.js\",\n    _s = $RefreshSig$();\n\nimport { useEtherBalance, useEthers } from \"@usedapp/core\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Balance = () => {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useEthers();\n  const etherBalance = parseFloat(formatEther(useEtherBalance(account))).toFixed(4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Balance Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Show connected wallet ETH / Matic Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [account && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), \"Ethers: \", etherBalance ? {\n        etherBalance\n      } : 0, \" ETH\", /*#__PURE__*/_jsxDEV(SmileCoin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Chain ID : \", chainId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"v2ah98wrWBH9YpOvZ7uCWpedLBA=\", false, function () {\n  return [useEthers, useEtherBalance];\n});\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/allan/Desktop/Development/DApp v2/Game_dApp/src/Pages/ChkBalance.js"],"names":["useEtherBalance","useEthers","formatEther","Balance","account","chainId","etherBalance","parseFloat","toFixed"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBJ,SAAS,EAAtC;AACA,QAAMK,YAAY,GAAGC,UAAU,CAACL,WAAW,CAACF,eAAe,CAACI,OAAD,CAAhB,CAAZ,CAAV,CAAkDI,OAAlD,CAA0D,CAA1D,CAArB;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA,iBACGJ,OAAO,iBAAI;AAAA,gCAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,cAEWE,YAAY,GAAG;AAACA,QAAAA;AAAD,OAAH,GAAoB,CAF3C,uBAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,mCAAgBD,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;GAAMF,O;UACyBF,S,EACeD,e;;;KAFxCG,O;AAmBN,eAAeA,OAAf","sourcesContent":["import { useEtherBalance, useEthers } from \"@usedapp/core\";\nimport { formatEther } from \"@ethersproject/units\";\n\nconst Balance = () => {\n  const { account, chainId } = useEthers();\n  const etherBalance = parseFloat(formatEther(useEtherBalance(account))).toFixed(4);\n  \n  return (\n    <div >\n      <h1> Balance Page</h1>\n      <h2>Show connected wallet ETH / Matic Balance</h2>\n\n      <div>\n        {account && <p>Account: {account}</p>}\n        Ethers: {etherBalance ? {etherBalance} : 0 } ETH\n        <SmileCoin />\n        <p> Chain ID : {chainId}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Balance;\n"]},"metadata":{},"sourceType":"module"}